{"version":3,"sources":["../../../projects/ix-libs/src/lib/ix-icons/ix-icons.module.ts","../../../projects/ix-libs/src/lib/ix-scroll/ix-scroll.service.ts","../../../projects/ix-libs/src/lib/ix-scroll/ix-scroll.component.ts","../../../projects/ix-libs/src/lib/ix-scroll/ix-scroll.module.ts"],"names":["iconRegistry","sanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","NgModule","args","declarations","exports","MatIconRegistry","DomSanitizer","ScrollButtonService","prototype","setContainerId","id","document","getElementById","setAttribute","getElementsByTagName","checkScroll","container","of","scrollHeight","clientHeight","scrollToTop","scroll","top","behavior","Injectable","providedIn","ScrollTopButtonComponent","ngZone","scrollButtonService","_this","this","isScrollable","window","onresize","e","run","localCheckScroll","scrollableElementId","subscribe","res","ngOnInit","setTimeout","Component","selector","template","NgZone","Input","imports","MatButtonModule","MatIconModule","CommonModule","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"smBASE,SAAYA,EAA+BC,GACzCD,EAAaE,WACX,cACAD,EAAUE,+BAA+B,wBAE3CH,EAAaE,WACX,cACAD,EAAUE,+BAA+B,wBAE3CH,EAAaE,WACX,gBACAD,EAAUE,+BAA+B,0BAE3CH,EAAaE,WACX,eACAD,EAAUE,+BAA+B,yBAE3CH,EAAaE,WACX,YACAD,EAAUE,+BAA+B,sBAE3CH,EAAaE,WACX,YACAD,EAAUE,+BAA+B,2CA5B9CC,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,GACdC,QAAS,gDALFC,EAAAA,uBACAC,EAAAA,iCCKP,SAAAC,YAEAA,EAAAC,UAAAC,eAAA,SAAeC,GACTA,EACaC,SAASC,eAAeF,GAChCG,aAAa,KAAMH,GAEXC,SAASG,qBAAqB,QAAQ,GAC9CD,aAAa,KAAM,wBAI9BN,EAAAC,UAAAO,YAAA,SAAYL,GACV,GAAIA,EAAI,CACN,IAAMM,EAAYL,SAASC,eAAeF,GAC1C,OAAOO,EAAAA,GAAGD,EAAUE,aAAeF,EAAUG,cAEvCH,EAAYL,SAASC,eAAe,uBAC1C,OAAOK,EAAAA,GAAGD,EAAUE,aAAeF,EAAUG,eAIjDZ,EAAAC,UAAAY,YAAA,SAAYV,GACNA,EACgBC,SAASC,eAAeF,GAChCW,OAAO,CAAEC,IAAK,EAAGC,SAAU,WAEnBZ,SAASC,eAAe,uBAChCS,OAAO,CAAEC,IAAK,EAAGC,SAAU,gIAhC1CC,EAAAA,WAAUtB,KAAA,CAAC,CACVuB,WAAY,kECeZ,SAAAC,EACUC,EACDC,GAFT,IAAAC,EAAAC,KACUA,KAAAH,OAAAA,EACDG,KAAAF,oBAAAA,EAHTE,KAAAC,cAAe,EAKbC,OAAOC,SAAW,SAACC,GACjBL,EAAKF,OAAOQ,KAAI,WACdN,EAAKO,8BAKXV,EAAAlB,UAAA4B,iBAAA,WAAA,IAAAP,EAAAC,KACMA,KAAKO,oBACPP,KAAKF,oBACFb,YAAYe,KAAKO,qBACjBC,WAAU,SAACC,GACVV,EAAKE,aAAeQ,KAGxBT,KAAKF,oBAAoBb,cAAcuB,WAAU,SAACC,GAChDV,EAAKE,aAAeQ,MAI1Bb,EAAAlB,UAAAY,YAAA,WACMU,KAAKO,oBACPP,KAAKF,oBAAoBR,YAAYU,KAAKO,qBAE1CP,KAAKF,oBAAoBR,eAI7BM,EAAAlB,UAAAgC,SAAA,WAAA,IAAAX,EAAAC,KACEA,KAAKF,oBAAoBnB,eAAeqB,KAAKO,qBAC7CI,YAAW,WACTZ,EAAKO,qBACJ,+BA9CNM,EAAAA,UAASxC,KAAA,CAAC,CAETyC,SAAU,mBACVC,SAAA,ggBARAC,EAAAA,cAGOtC,oCASNuC,EAAAA,mCACAA,EAAAA,eCLH,iCANC7C,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,CAACuB,GACfqB,QAAS,CAACC,EAAAA,gBAAiBC,EAAAA,cAAeC,EAAAA,cAC1C9C,QAAS,CAACsB,GACVyB,QAAS,CAACC,EAAAA","sourcesContent":["import { NgModule } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n})\nexport class IxIconsModule {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'ix-file-pdf',\n      sanitizer.bypassSecurityTrustResourceUrl('ix-img/file_pdf.svg')\n    );\n    iconRegistry.addSvgIcon(\n      'ix-file-doc',\n      sanitizer.bypassSecurityTrustResourceUrl('ix-img/file_doc.svg')\n    );\n    iconRegistry.addSvgIcon(\n      'ix-file-excel',\n      sanitizer.bypassSecurityTrustResourceUrl('ix-img/file_excel.svg')\n    );\n    iconRegistry.addSvgIcon(\n      'ix-file-html',\n      sanitizer.bypassSecurityTrustResourceUrl('ix-img/file_html.svg')\n    );\n    iconRegistry.addSvgIcon(\n      'ix-export',\n      sanitizer.bypassSecurityTrustResourceUrl('ix-img/export.svg')\n    );\n    iconRegistry.addSvgIcon(\n      'ix-dialog',\n      sanitizer.bypassSecurityTrustResourceUrl('ix-img/dialog.svg')\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScrollButtonService {\n  constructor() {}\n\n  setContainerId(id?): void {\n    if (id) {\n      const bodyEl = document.getElementById(id);\n      bodyEl.setAttribute('id', id);\n    } else {\n      const bodyEl = document.getElementsByTagName('BODY')[0];\n      bodyEl.setAttribute('id', 'ix-scroll-container');\n    }\n  }\n\n  checkScroll(id?): Observable<boolean> {\n    if (id) {\n      const container = document.getElementById(id);\n      return of(container.scrollHeight > container.clientHeight);\n    } else {\n      const container = document.getElementById('ix-scroll-container');\n      return of(container.scrollHeight > container.clientHeight);\n    }\n  }\n\n  scrollToTop(id?): void {\n    if (id) {\n      const container = document.getElementById(id);\n      container.scroll({ top: 0, behavior: 'smooth' });\n    } else {\n      const container = document.getElementById('ix-scroll-container');\n      container.scroll({ top: 0, behavior: 'smooth' });\n    }\n  }\n}\n","import {\n  Component,\n  CUSTOM_ELEMENTS_SCHEMA,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { ScrollButtonService } from './ix-scroll.service';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ix-scroll-button',\n  templateUrl: './ix-scroll.component.html',\n  styleUrls: ['./ix-scroll.component.scss'],\n})\nexport class ScrollTopButtonComponent implements OnInit {\n  @Input() color: 'primary' | 'accent';\n  @Input() scrollableElementId: string;\n  isScrollable = false;\n  constructor(\n    private ngZone: NgZone,\n    public scrollButtonService: ScrollButtonService\n  ) {\n    window.onresize = (e) => {\n      this.ngZone.run(() => {\n        this.localCheckScroll();\n      });\n    };\n  }\n\n  localCheckScroll(): void {\n    if (this.scrollableElementId) {\n      this.scrollButtonService\n        .checkScroll(this.scrollableElementId)\n        .subscribe((res) => {\n          this.isScrollable = res;\n        });\n    } else {\n      this.scrollButtonService.checkScroll().subscribe((res) => {\n        this.isScrollable = res;\n      });\n    }\n  }\n  scrollToTop(): void {\n    if (this.scrollableElementId) {\n      this.scrollButtonService.scrollToTop(this.scrollableElementId);\n    } else {\n      this.scrollButtonService.scrollToTop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.scrollButtonService.setContainerId(this.scrollableElementId);\n    setTimeout(() => {\n      this.localCheckScroll();\n    }, 500);\n  }\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { ScrollTopButtonComponent } from './ix-scroll.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ScrollTopButtonComponent],\n  imports: [MatButtonModule, MatIconModule, CommonModule],\n  exports: [ScrollTopButtonComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class IxScrollModule {}\n"]}